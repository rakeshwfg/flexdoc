/**
 * Word Document (DOCX) Conversion Examples
 *
 * This file demonstrates various ways to convert HTML to Word documents
 * with different themes, styling, and formatting options.
 */

const { FlexDoc, ThemeBuilder, ThemeManager } = require('../dist/index');

const flexdoc = new FlexDoc();

// Example HTML content
const sampleHTML = `
<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>FlexDoc Word Example</title>
</head>
<body>
  <h1>FlexDoc Word Document Example</h1>

  <h2>Introduction</h2>
  <p>This document demonstrates the powerful Word document generation capabilities of FlexDoc. FlexDoc can convert HTML to professional Word documents with full theme support, custom styling, and rich content types.</p>

  <h2>Key Features</h2>
  <ul>
    <li><strong>Theme Support:</strong> Use 25+ professional themes or create custom ones</li>
    <li><strong>Rich Content:</strong> Support for headings, paragraphs, lists, tables, images, and more</li>
    <li><strong>Typography:</strong> Custom fonts, sizes, and line spacing</li>
    <li><strong>Headers & Footers:</strong> Add page numbers, custom text, and formatting</li>
    <li><strong>Table of Contents:</strong> Automatic TOC generation from headings</li>
    <li><strong>Styling:</strong> Bold, italic, underline, colors, and more</li>
  </ul>

  <h2>Technical Details</h2>
  <p>FlexDoc uses the <em>docx</em> library under the hood, combined with our powerful theme system to deliver professional-looking Word documents with minimal configuration.</p>

  <blockquote>
    "FlexDoc makes document generation simple, powerful, and flexible."
  </blockquote>

  <h3>Data Example</h3>
  <p>Here's a sample table with quarterly sales data:</p>

  <table>
    <thead>
      <tr>
        <th>Quarter</th>
        <th>Revenue</th>
        <th>Expenses</th>
        <th>Profit</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>Q1 2024</td>
        <td>$125,000</td>
        <td>$85,000</td>
        <td>$40,000</td>
      </tr>
      <tr>
        <td>Q2 2024</td>
        <td>$145,000</td>
        <td>$92,000</td>
        <td>$53,000</td>
      </tr>
      <tr>
        <td>Q3 2024</td>
        <td>$160,000</td>
        <td>$98,000</td>
        <td>$62,000</td>
      </tr>
      <tr>
        <td>Q4 2024</td>
        <td>$180,000</td>
        <td>$105,000</td>
        <td>$75,000</td>
      </tr>
    </tbody>
  </table>

  <h3>Code Example</h3>
  <p>Here's how to use FlexDoc in your code:</p>

  <pre><code>const { FlexDoc } = require('flexdoc');
const flexdoc = new FlexDoc();

// Convert to Word
const result = await flexdoc.toWord(html, {
  theme: 'corporate-blue',
  includeTableOfContents: true
});</code></pre>

  <h2>Conclusion</h2>
  <p>FlexDoc provides a complete solution for HTML to Word conversion with professional theming, rich content support, and easy-to-use APIs. Whether you're generating reports, documentation, or any other type of document, FlexDoc has you covered.</p>

  <hr>

  <p><small>Generated by FlexDoc - Professional Document Generation Library</small></p>
</body>
</html>
`;

// ============================================================================
// Example 1: Basic Word Document with Corporate Blue Theme
// ============================================================================
async function example1_BasicWordDocument() {
  console.log('\n📄 Example 1: Basic Word Document with Corporate Blue Theme');
  console.log('='.repeat(70));

  const result = await flexdoc.toWord(sampleHTML, {
    outputPath: './examples/output/basic-document.docx',
    theme: 'corporate-blue',
    title: 'FlexDoc Example Document',
    author: 'FlexDoc Team',
    company: 'FlexDoc Inc.',
    subject: 'Word Conversion Example'
  });

  if (result.success) {
    console.log('✅ Document created successfully!');
    console.log(`   File: ${result.filePath}`);
    console.log(`   Size: ${(result.size / 1024).toFixed(2)} KB`);
    console.log(`   Pages: ~${result.metadata?.pageCount}`);
  }
}

// ============================================================================
// Example 2: Document with Table of Contents
// ============================================================================
async function example2_WithTableOfContents() {
  console.log('\n📄 Example 2: Document with Table of Contents');
  console.log('='.repeat(70));

  const result = await flexdoc.toWord(sampleHTML, {
    outputPath: './examples/output/document-with-toc.docx',
    theme: 'professional-gray',
    includeTableOfContents: true,
    tocDepth: 3,
    title: 'Document with TOC',
    author: 'FlexDoc'
  });

  if (result.success) {
    console.log('✅ Document with TOC created!');
    console.log(`   File: ${result.filePath}`);
  }
}

// ============================================================================
// Example 3: Document with Custom Headers and Footers
// ============================================================================
async function example3_HeadersAndFooters() {
  console.log('\n📄 Example 3: Document with Headers and Footers');
  console.log('='.repeat(70));

  const result = await flexdoc.toWord(sampleHTML, {
    outputPath: './examples/output/document-with-headers.docx',
    theme: 'tech-purple',
    title: 'Document with Headers',
    header: {
      text: 'FlexDoc Professional Report',
      alignment: 'left'
    },
    footer: {
      text: 'Confidential',
      includePageNumber: true,
      alignment: 'center'
    }
  });

  if (result.success) {
    console.log('✅ Document with headers/footers created!');
    console.log(`   File: ${result.filePath}`);
  }
}

// ============================================================================
// Example 4: Document with Custom Typography
// ============================================================================
async function example4_CustomTypography() {
  console.log('\n📄 Example 4: Document with Custom Typography');
  console.log('='.repeat(70));

  const result = await flexdoc.toWord(sampleHTML, {
    outputPath: './examples/output/document-custom-typography.docx',
    theme: 'creative-pink',
    fontFamily: 'Georgia',
    fontSize: 12,
    lineSpacing: 1.5,
    title: 'Custom Typography Document'
  });

  if (result.success) {
    console.log('✅ Document with custom typography created!');
    console.log(`   File: ${result.filePath}`);
  }
}

// ============================================================================
// Example 5: Landscape Document with Custom Margins
// ============================================================================
async function example5_LandscapeDocument() {
  console.log('\n📄 Example 5: Landscape Document with Custom Margins');
  console.log('='.repeat(70));

  const result = await flexdoc.toWord(sampleHTML, {
    outputPath: './examples/output/document-landscape.docx',
    theme: 'innovation-teal',
    orientation: 'landscape',
    pageSize: 'Letter',
    margins: {
      top: 720,    // 0.5 inch
      right: 720,
      bottom: 720,
      left: 720
    },
    title: 'Landscape Document'
  });

  if (result.success) {
    console.log('✅ Landscape document created!');
    console.log(`   File: ${result.filePath}`);
  }
}

// ============================================================================
// Example 6: Document with Custom Theme
// ============================================================================
async function example6_CustomTheme() {
  console.log('\n📄 Example 6: Document with Custom Theme');
  console.log('='.repeat(70));

  // Create custom theme
  const customTheme = new ThemeBuilder('My Custom Theme')
    .setPrimaryColor('#2E86AB')
    .setSecondaryColor('#A23B72')
    .setAccentColor('#F18F01')
    .setFonts('Arial', 'Calibri')
    .setDescription('Custom branded theme for documents')
    .build();

  const result = await flexdoc.toWord(sampleHTML, {
    outputPath: './examples/output/document-custom-theme.docx',
    theme: customTheme,
    title: 'Custom Theme Document',
    company: 'My Company'
  });

  if (result.success) {
    console.log('✅ Document with custom theme created!');
    console.log(`   File: ${result.filePath}`);
  }
}

// ============================================================================
// Example 7: Quick Theme Color Override
// ============================================================================
async function example7_QuickColorOverride() {
  console.log('\n📄 Example 7: Quick Theme Color Override');
  console.log('='.repeat(70));

  const result = await flexdoc.toWord(sampleHTML, {
    outputPath: './examples/output/document-color-override.docx',
    theme: 'corporate-blue',
    themeOptions: {
      primaryColor: '#8B0000',  // Dark red
      accentColor: '#FFD700'     // Gold
    },
    title: 'Color Override Document'
  });

  if (result.success) {
    console.log('✅ Document with color override created!');
    console.log(`   File: ${result.filePath}`);
  }
}

// ============================================================================
// Example 8: Dark Mode Document
// ============================================================================
async function example8_DarkModeDocument() {
  console.log('\n📄 Example 8: Dark Mode Document');
  console.log('='.repeat(70));

  const result = await flexdoc.toWord(sampleHTML, {
    outputPath: './examples/output/document-dark-mode.docx',
    theme: 'dark-mode',
    title: 'Dark Mode Document',
    footer: {
      text: 'Dark Mode Example',
      includePageNumber: true,
      alignment: 'right'
    }
  });

  if (result.success) {
    console.log('✅ Dark mode document created!');
    console.log(`   File: ${result.filePath}`);
  }
}

// ============================================================================
// Example 9: Academic Document
// ============================================================================
async function example9_AcademicDocument() {
  console.log('\n📄 Example 9: Academic Document');
  console.log('='.repeat(70));

  const result = await flexdoc.toWord(sampleHTML, {
    outputPath: './examples/output/document-academic.docx',
    theme: 'academic-serif',
    includeTableOfContents: true,
    tocDepth: 4,
    fontFamily: 'Times New Roman',
    fontSize: 12,
    lineSpacing: 2.0,  // Double spacing
    margins: {
      top: 1440,   // 1 inch
      right: 1440,
      bottom: 1440,
      left: 1440
    },
    title: 'Academic Research Paper',
    author: 'Dr. John Smith',
    footer: {
      includePageNumber: true,
      alignment: 'center'
    }
  });

  if (result.success) {
    console.log('✅ Academic document created!');
    console.log(`   File: ${result.filePath}`);
  }
}

// ============================================================================
// Example 10: Complete Professional Report
// ============================================================================
async function example10_ProfessionalReport() {
  console.log('\n📄 Example 10: Complete Professional Report');
  console.log('='.repeat(70));

  const reportHTML = `
    <h1>Quarterly Business Report - Q4 2024</h1>

    <h2>Executive Summary</h2>
    <p>This report presents the comprehensive business performance metrics for Q4 2024. The quarter showed exceptional growth across all key performance indicators, with revenue increasing by 25% year-over-year.</p>

    <h2>Financial Performance</h2>

    <h3>Revenue Analysis</h3>
    <p>Total revenue for Q4 2024 reached $180,000, representing a significant milestone for the company.</p>

    <table>
      <thead>
        <tr>
          <th>Metric</th>
          <th>Q3 2024</th>
          <th>Q4 2024</th>
          <th>Change</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>Revenue</td>
          <td>$160,000</td>
          <td>$180,000</td>
          <td>+12.5%</td>
        </tr>
        <tr>
          <td>Expenses</td>
          <td>$98,000</td>
          <td>$105,000</td>
          <td>+7.1%</td>
        </tr>
        <tr>
          <td>Net Profit</td>
          <td>$62,000</td>
          <td>$75,000</td>
          <td>+21.0%</td>
        </tr>
      </tbody>
    </table>

    <h3>Key Achievements</h3>
    <ul>
      <li>Launched 3 new products successfully</li>
      <li>Expanded to 2 new markets</li>
      <li>Increased customer base by 40%</li>
      <li>Improved customer satisfaction score to 4.8/5.0</li>
    </ul>

    <h2>Market Analysis</h2>
    <p>The market showed strong growth potential with emerging opportunities in the digital transformation sector.</p>

    <h2>Future Outlook</h2>
    <p>Looking ahead to 2025, we anticipate continued growth driven by product innovation and market expansion strategies.</p>

    <h3>Strategic Priorities</h3>
    <ol>
      <li>Enhance product portfolio with AI capabilities</li>
      <li>Expand international presence</li>
      <li>Invest in customer success initiatives</li>
      <li>Strengthen operational efficiency</li>
    </ol>

    <h2>Conclusion</h2>
    <p>Q4 2024 demonstrated exceptional performance and positioned the company for continued success in 2025.</p>
  `;

  const result = await flexdoc.toWord(reportHTML, {
    outputPath: './examples/output/professional-report.docx',
    theme: 'executive-gold',
    title: 'Q4 2024 Business Report',
    subject: 'Quarterly Financial and Business Performance Report',
    author: 'Finance Team',
    company: 'FlexDoc Corporation',
    includeTableOfContents: true,
    tocDepth: 3,
    header: {
      text: 'Q4 2024 Business Report - Confidential',
      alignment: 'left'
    },
    footer: {
      text: '© 2024 FlexDoc Corporation',
      includePageNumber: true,
      alignment: 'center'
    },
    fontSize: 11,
    lineSpacing: 1.15
  });

  if (result.success) {
    console.log('✅ Professional report created!');
    console.log(`   File: ${result.filePath}`);
    console.log(`   Size: ${(result.size / 1024).toFixed(2)} KB`);
  }
}

// ============================================================================
// Run all examples
// ============================================================================
async function runAllExamples() {
  console.log('\n');
  console.log('╔════════════════════════════════════════════════════════════════════╗');
  console.log('║         FlexDoc Word Document (DOCX) Conversion Examples          ║');
  console.log('╚════════════════════════════════════════════════════════════════════╝');

  // Create output directory if it doesn't exist
  const fs = require('fs');
  const outputDir = './examples/output';
  if (!fs.existsSync(outputDir)) {
    fs.mkdirSync(outputDir, { recursive: true });
  }

  try {
    await example1_BasicWordDocument();
    await example2_WithTableOfContents();
    await example3_HeadersAndFooters();
    await example4_CustomTypography();
    await example5_LandscapeDocument();
    await example6_CustomTheme();
    await example7_QuickColorOverride();
    await example8_DarkModeDocument();
    await example9_AcademicDocument();
    await example10_ProfessionalReport();

    console.log('\n');
    console.log('╔════════════════════════════════════════════════════════════════════╗');
    console.log('║                    All Examples Completed! ✅                       ║');
    console.log('╚════════════════════════════════════════════════════════════════════╝');
    console.log('\nGenerated documents are available in: ./examples/output/');
    console.log('\nTry them out:');
    console.log('  • Open the documents in Microsoft Word or LibreOffice');
    console.log('  • Notice the different themes, styles, and formatting');
    console.log('  • Try creating your own custom themes!');
    console.log('\n');
  } catch (error) {
    console.error('\n❌ Error running examples:', error.message);
    if (error.stack) {
      console.error(error.stack);
    }
  }
}

// Run examples if this file is executed directly
if (require.main === module) {
  runAllExamples().catch(console.error);
}

module.exports = {
  example1_BasicWordDocument,
  example2_WithTableOfContents,
  example3_HeadersAndFooters,
  example4_CustomTypography,
  example5_LandscapeDocument,
  example6_CustomTheme,
  example7_QuickColorOverride,
  example8_DarkModeDocument,
  example9_AcademicDocument,
  example10_ProfessionalReport
};
